name: Deploy Infrastructure

on:
  push:
    branches:
      - master

jobs: 
  terraform:
    runs-on: ubuntu-latest
    name: Terraform
    environment: dev 
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "your-base64-password"
        replace: ${{ secrets.BASE64_BASIC_PASSWORD }}
        regex: false

    - name: Setup Node 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: npm

    - name: Install dependencies
      run: npm ci

    - name: Rebuild the dist/ directory
      run: npm run build

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets. AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets. AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
    
    - name: Terraform Init
      id: init
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: tf

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -input=false -no-color -out tf.plan
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: tf

    - name: Terraform Apply
      run: terraform apply -input=false tf.plan
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: tf